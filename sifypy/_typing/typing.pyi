from typing import Any, overload

class String:
    """
    
    The String class mimics the functionality of Python's built-in `str` type, allowing 
    for various string operations like concatenation, slicing, and formatting. This class 
    also includes additional methods to enhance string processing.

    :example:
    >>> my_string = String("hello")
    >>> my_string.to_upper()
    """
    def __init__(self, initial: object = ..., /): ...
    def __str__(self) -> str: ...
    def __len__(self) -> int: ...
    def __add__(self, other: 'String') -> 'String': ...
    def __eq__(self, other: object) -> bool: ...
    def __getitem__(self, key: int) -> str: ...
    def __iter__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __call__(self) -> 'String': ...

    def to_upper(self) -> 'String': ...
    def to_lower(self) -> 'String': ...
    def capitalize(self) -> 'String': ...
    def reverse(self) -> 'String': ...
    def contains(self, substring: str) -> bool: ...
    def split(self, delimiter: str = " ") -> list['String']: ...
    def join(self, iterable: list['String']) -> 'String': ...
    def format(self, *args: any, **kwargs: any) -> 'String': ...
    def replace(self, old: str, new: str, count: int = -1) -> 'String': ...
    def strip(self) -> 'String': ...
    def starts_with(self, prefix: str) -> bool: ...
    def ends_with(self, suffix: str) -> bool: ...
